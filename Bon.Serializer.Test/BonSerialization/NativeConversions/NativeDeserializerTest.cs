namespace Bon.Serializer.Test.BonSerialization.NativeConversions;

public class NativeDeserializerTest : BonSerializerTestBase
{
    [Fact] public void BoolToString() => DeserializeSlow(true, "1", ForbidSchemaTypeOptimization);
    [Fact] public void BoolToBool() => DeserializeFast(true, true, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToByte() => DeserializeSlow(true, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToSByte() => DeserializeSlow(true, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToShort() => DeserializeSlow(true, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToUShort() => DeserializeSlow(true, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToInt() => DeserializeSlow(true, 1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToUInt() => DeserializeSlow(true, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToLong() => DeserializeSlow(true, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToULong() => DeserializeSlow(true, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToFloat() => DeserializeSlow(true, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToDouble() => DeserializeSlow(true, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToDecimal() => DeserializeSlow(true, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void BoolToNullableBool() => DeserializeSlow(true, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableByte() => DeserializeSlow(true, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableSByte() => DeserializeSlow(true, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableShort() => DeserializeSlow(true, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableUShort() => DeserializeSlow(true, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableInt() => DeserializeSlow(true, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableUInt() => DeserializeSlow(true, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableLong() => DeserializeSlow(true, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableULong() => DeserializeSlow(true, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableFloat() => DeserializeSlow(true, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableDouble() => DeserializeSlow(true, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void BoolToNullableDecimal() => DeserializeSlow(true, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void ByteToString() => DeserializeSlow((byte)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void ByteToBool() => DeserializeSlow((byte)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToByte() => DeserializeFast((byte)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToSByte() => DeserializeSlow((byte)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToShort() => DeserializeSlow((byte)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToUShort() => DeserializeSlow((byte)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToInt() => DeserializeSlow((byte)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToUInt() => DeserializeSlow((byte)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToLong() => DeserializeSlow((byte)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToULong() => DeserializeSlow((byte)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToFloat() => DeserializeSlow((byte)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToDouble() => DeserializeSlow((byte)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToDecimal() => DeserializeSlow((byte)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void ByteToNullableBool() => DeserializeSlow((byte)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableByte() => DeserializeSlow((byte)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableSByte() => DeserializeSlow((byte)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableShort() => DeserializeSlow((byte)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableUShort() => DeserializeSlow((byte)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableInt() => DeserializeSlow((byte)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableUInt() => DeserializeSlow((byte)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableLong() => DeserializeSlow((byte)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableULong() => DeserializeSlow((byte)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableFloat() => DeserializeSlow((byte)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableDouble() => DeserializeSlow((byte)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ByteToNullableDecimal() => DeserializeSlow((byte)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void SByteToString() => DeserializeSlow((sbyte)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void SByteToBool() => DeserializeSlow((sbyte)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToByte() => DeserializeSlow((sbyte)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToSByte() => DeserializeFast((sbyte)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToShort() => DeserializeSlow((sbyte)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToUShort() => DeserializeSlow((sbyte)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToInt() => DeserializeSlow((sbyte)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToUInt() => DeserializeSlow((sbyte)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToLong() => DeserializeSlow((sbyte)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToULong() => DeserializeSlow((sbyte)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToFloat() => DeserializeSlow((sbyte)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToDouble() => DeserializeSlow((sbyte)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToDecimal() => DeserializeSlow((sbyte)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void SByteToNullableBool() => DeserializeSlow((sbyte)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableByte() => DeserializeSlow((sbyte)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableSByte() => DeserializeSlow((sbyte)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableShort() => DeserializeSlow((sbyte)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableUShort() => DeserializeSlow((sbyte)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableInt() => DeserializeSlow((sbyte)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableUInt() => DeserializeSlow((sbyte)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableLong() => DeserializeSlow((sbyte)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableULong() => DeserializeSlow((sbyte)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableFloat() => DeserializeSlow((sbyte)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableDouble() => DeserializeSlow((sbyte)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void SByteToNullableDecimal() => DeserializeSlow((sbyte)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void ShortToString() => DeserializeSlow((short)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void ShortToBool() => DeserializeSlow((short)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToByte() => DeserializeSlow((short)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToSByte() => DeserializeSlow((short)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToShort() => DeserializeFast((short)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToUShort() => DeserializeSlow((short)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToInt() => DeserializeSlow((short)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToUInt() => DeserializeSlow((short)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToLong() => DeserializeSlow((short)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToULong() => DeserializeSlow((short)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToFloat() => DeserializeSlow((short)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToDouble() => DeserializeSlow((short)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToDecimal() => DeserializeSlow((short)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void ShortToNullableBool() => DeserializeSlow((short)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableByte() => DeserializeSlow((short)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableSByte() => DeserializeSlow((short)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableShort() => DeserializeSlow((short)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableUShort() => DeserializeSlow((short)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableInt() => DeserializeSlow((short)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableUInt() => DeserializeSlow((short)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableLong() => DeserializeSlow((short)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableULong() => DeserializeSlow((short)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableFloat() => DeserializeSlow((short)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableDouble() => DeserializeSlow((short)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ShortToNullableDecimal() => DeserializeSlow((short)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void UShortToString() => DeserializeSlow((ushort)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void UShortToBool() => DeserializeSlow((ushort)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToByte() => DeserializeSlow((ushort)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToSByte() => DeserializeSlow((ushort)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToShort() => DeserializeSlow((ushort)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToUShort() => DeserializeFast((ushort)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToInt() => DeserializeSlow((ushort)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToUInt() => DeserializeSlow((ushort)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToLong() => DeserializeSlow((ushort)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToULong() => DeserializeSlow((ushort)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToFloat() => DeserializeSlow((ushort)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToDouble() => DeserializeSlow((ushort)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToDecimal() => DeserializeSlow((ushort)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void UShortToNullableBool() => DeserializeSlow((ushort)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableByte() => DeserializeSlow((ushort)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableSByte() => DeserializeSlow((ushort)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableShort() => DeserializeSlow((ushort)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableUShort() => DeserializeSlow((ushort)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableInt() => DeserializeSlow((ushort)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableUInt() => DeserializeSlow((ushort)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableLong() => DeserializeSlow((ushort)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableULong() => DeserializeSlow((ushort)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableFloat() => DeserializeSlow((ushort)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableDouble() => DeserializeSlow((ushort)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UShortToNullableDecimal() => DeserializeSlow((ushort)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void IntToString() => DeserializeSlow(1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void IntToBool() => DeserializeSlow(1, true, ForbidSchemaTypeOptimization);
    [Fact] public void IntToByte() => DeserializeSlow(1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToSByte() => DeserializeSlow(1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToShort() => DeserializeSlow(1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToUShort() => DeserializeSlow(1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToInt() => DeserializeFast(1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToUInt() => DeserializeSlow(1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToLong() => DeserializeSlow(1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToULong() => DeserializeSlow(1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToFloat() => DeserializeSlow(1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToDouble() => DeserializeSlow(1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToDecimal() => DeserializeSlow(1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void IntToNullableBool() => DeserializeSlow(1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableByte() => DeserializeSlow(1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableSByte() => DeserializeSlow(1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableShort() => DeserializeSlow(1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableUShort() => DeserializeSlow(1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableInt() => DeserializeSlow(1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableUInt() => DeserializeSlow(1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableLong() => DeserializeSlow(1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableULong() => DeserializeSlow(1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableFloat() => DeserializeSlow(1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableDouble() => DeserializeSlow(1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void IntToNullableDecimal() => DeserializeSlow(1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void UIntToString() => DeserializeSlow((uint)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void UIntToBool() => DeserializeSlow((uint)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToByte() => DeserializeSlow((uint)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToSByte() => DeserializeSlow((uint)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToShort() => DeserializeSlow((uint)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToUShort() => DeserializeSlow((uint)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToInt() => DeserializeSlow((uint)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToUInt() => DeserializeFast((uint)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToLong() => DeserializeSlow((uint)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToULong() => DeserializeSlow((uint)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToFloat() => DeserializeSlow((uint)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToDouble() => DeserializeSlow((uint)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToDecimal() => DeserializeSlow((uint)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void UIntToNullableBool() => DeserializeSlow((uint)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableByte() => DeserializeSlow((uint)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableSByte() => DeserializeSlow((uint)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableShort() => DeserializeSlow((uint)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableUShort() => DeserializeSlow((uint)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableInt() => DeserializeSlow((uint)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableUInt() => DeserializeSlow((uint)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableLong() => DeserializeSlow((uint)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableULong() => DeserializeSlow((uint)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableFloat() => DeserializeSlow((uint)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableDouble() => DeserializeSlow((uint)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void UIntToNullableDecimal() => DeserializeSlow((uint)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void LongToString() => DeserializeSlow((long)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void LongToBool() => DeserializeSlow((long)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void LongToByte() => DeserializeSlow((long)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToSByte() => DeserializeSlow((long)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToShort() => DeserializeSlow((long)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToUShort() => DeserializeSlow((long)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToInt() => DeserializeSlow((long)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToUInt() => DeserializeSlow((long)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToLong() => DeserializeFast((long)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToULong() => DeserializeSlow((long)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToFloat() => DeserializeSlow((long)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToDouble() => DeserializeSlow((long)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToDecimal() => DeserializeSlow((long)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void LongToNullableBool() => DeserializeSlow((long)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableByte() => DeserializeSlow((long)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableSByte() => DeserializeSlow((long)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableShort() => DeserializeSlow((long)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableUShort() => DeserializeSlow((long)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableInt() => DeserializeSlow((long)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableUInt() => DeserializeSlow((long)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableLong() => DeserializeSlow((long)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableULong() => DeserializeSlow((long)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableFloat() => DeserializeSlow((long)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableDouble() => DeserializeSlow((long)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void LongToNullableDecimal() => DeserializeSlow((long)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void ULongToString() => DeserializeSlow((ulong)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void ULongToBool() => DeserializeSlow((ulong)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToByte() => DeserializeSlow((ulong)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToSByte() => DeserializeSlow((ulong)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToShort() => DeserializeSlow((ulong)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToUShort() => DeserializeSlow((ulong)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToInt() => DeserializeSlow((ulong)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToUInt() => DeserializeSlow((ulong)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToLong() => DeserializeSlow((ulong)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToULong() => DeserializeFast((ulong)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToFloat() => DeserializeSlow((ulong)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToDouble() => DeserializeSlow((ulong)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToDecimal() => DeserializeSlow((ulong)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void ULongToNullableBool() => DeserializeSlow((ulong)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableByte() => DeserializeSlow((ulong)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableSByte() => DeserializeSlow((ulong)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableShort() => DeserializeSlow((ulong)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableUShort() => DeserializeSlow((ulong)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableInt() => DeserializeSlow((ulong)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableUInt() => DeserializeSlow((ulong)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableLong() => DeserializeSlow((ulong)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableULong() => DeserializeSlow((ulong)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableFloat() => DeserializeSlow((ulong)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableDouble() => DeserializeSlow((ulong)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void ULongToNullableDecimal() => DeserializeSlow((ulong)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void FloatToString() => DeserializeSlow((float)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void FloatToBool() => DeserializeSlow((float)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToByte() => DeserializeSlow((float)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToSByte() => DeserializeSlow((float)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToShort() => DeserializeSlow((float)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToUShort() => DeserializeSlow((float)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToInt() => DeserializeSlow((float)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToUInt() => DeserializeSlow((float)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToLong() => DeserializeSlow((float)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToULong() => DeserializeSlow((float)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToFloat() => DeserializeFast((float)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToDouble() => DeserializeSlow((float)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToDecimal() => DeserializeSlow((float)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void FloatToNullableBool() => DeserializeSlow((float)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableByte() => DeserializeSlow((float)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableSByte() => DeserializeSlow((float)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableShort() => DeserializeSlow((float)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableUShort() => DeserializeSlow((float)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableInt() => DeserializeSlow((float)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableUInt() => DeserializeSlow((float)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableLong() => DeserializeSlow((float)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableULong() => DeserializeSlow((float)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableFloat() => DeserializeSlow((float)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableDouble() => DeserializeSlow((float)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void FloatToNullableDecimal() => DeserializeSlow((float)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void DoubleToString() => DeserializeSlow((double)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToBool() => DeserializeSlow((double)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToByte() => DeserializeSlow((double)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToSByte() => DeserializeSlow((double)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToShort() => DeserializeSlow((double)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToUShort() => DeserializeSlow((double)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToInt() => DeserializeSlow((double)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToUInt() => DeserializeSlow((double)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToLong() => DeserializeSlow((double)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToULong() => DeserializeSlow((double)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToFloat() => DeserializeSlow((double)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToDouble() => DeserializeFast((double)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToDecimal() => DeserializeSlow((double)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void DoubleToNullableBool() => DeserializeSlow((double)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableByte() => DeserializeSlow((double)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableSByte() => DeserializeSlow((double)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableShort() => DeserializeSlow((double)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableUShort() => DeserializeSlow((double)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableInt() => DeserializeSlow((double)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableUInt() => DeserializeSlow((double)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableLong() => DeserializeSlow((double)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableULong() => DeserializeSlow((double)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableFloat() => DeserializeSlow((double)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableDouble() => DeserializeSlow((double)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DoubleToNullableDecimal() => DeserializeSlow((double)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void DecimalToString() => DeserializeSlow((decimal)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToBool() => DeserializeSlow((decimal)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToByte() => DeserializeSlow((decimal)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToSByte() => DeserializeSlow((decimal)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToShort() => DeserializeSlow((decimal)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToUShort() => DeserializeSlow((decimal)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToInt() => DeserializeSlow((decimal)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToUInt() => DeserializeSlow((decimal)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToLong() => DeserializeSlow((decimal)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToULong() => DeserializeSlow((decimal)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToFloat() => DeserializeSlow((decimal)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToDouble() => DeserializeSlow((decimal)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToDecimal() => DeserializeFast((decimal)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void DecimalToNullableBool() => DeserializeSlow((decimal)1, (bool?)true, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableByte() => DeserializeSlow((decimal)1, (byte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableSByte() => DeserializeSlow((decimal)1, (sbyte?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableShort() => DeserializeSlow((decimal)1, (short?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableUShort() => DeserializeSlow((decimal)1, (ushort?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableInt() => DeserializeSlow((decimal)1, (int?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableUInt() => DeserializeSlow((decimal)1, (uint?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableLong() => DeserializeSlow((decimal)1, (long?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableULong() => DeserializeSlow((decimal)1, (ulong?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableFloat() => DeserializeSlow((decimal)1, (float?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableDouble() => DeserializeSlow((decimal)1, (double?)1, ForbidSchemaTypeOptimization);
    [Fact] public void DecimalToNullableDecimal() => DeserializeSlow((decimal)1, (decimal?)1, ForbidSchemaTypeOptimization);

    [Fact] public void NullableIntToString() => DeserializeSlow((int?)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToBool() => DeserializeSlow((int?)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToByte() => DeserializeSlow((int?)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToSByte() => DeserializeSlow((int?)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToShort() => DeserializeSlow((int?)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToUShort() => DeserializeSlow((int?)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToInt() => DeserializeSlow((int?)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToUInt() => DeserializeSlow((int?)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToLong() => DeserializeSlow((int?)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToULong() => DeserializeSlow((int?)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToFloat() => DeserializeSlow((int?)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToDouble() => DeserializeSlow((int?)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToDecimal() => DeserializeSlow((int?)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void NullableIntToNullableBool() => DeserializeSlow((int?)null, (bool?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableByte() => DeserializeSlow((int?)null, (byte?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableSByte() => DeserializeSlow((int?)null, (sbyte?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableShort() => DeserializeSlow((int?)null, (short?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableUShort() => DeserializeSlow((int?)null, (ushort?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableInt() => DeserializeSlow((int?)null, (int?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableUInt() => DeserializeSlow((int?)null, (uint?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableLong() => DeserializeFast((int?)null, (long?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableULong() => DeserializeSlow((int?)null, (ulong?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableFloat() => DeserializeSlow((int?)null, (float?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableDouble() => DeserializeSlow((int?)null, (double?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableIntToNullableDecimal() => DeserializeSlow((int?)null, (decimal?)null, ForbidSchemaTypeOptimization);

    [Fact] public void NullableUIntToString() => DeserializeSlow((uint?)1, "1", ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToBool() => DeserializeSlow((uint?)1, true, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToByte() => DeserializeSlow((uint?)1, (byte)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToSByte() => DeserializeSlow((uint?)1, (sbyte)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToShort() => DeserializeSlow((uint?)1, (short)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToUShort() => DeserializeSlow((uint?)1, (ushort)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToInt() => DeserializeSlow((uint?)1, 1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToUInt() => DeserializeSlow((uint?)1, (uint)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToLong() => DeserializeSlow((uint?)1, (long)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToULong() => DeserializeSlow((uint?)1, (ulong)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToFloat() => DeserializeSlow((uint?)1, (float)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToDouble() => DeserializeSlow((uint?)1, (double)1, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToDecimal() => DeserializeSlow((uint?)1, (decimal)1, ForbidSchemaTypeOptimization);

    [Fact] public void NullableUIntToNullableBool() => DeserializeSlow((uint?)null, (bool?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableByte() => DeserializeSlow((uint?)null, (byte?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableSByte() => DeserializeSlow((uint?)null, (sbyte?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableShort() => DeserializeSlow((uint?)null, (short?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableUShort() => DeserializeSlow((uint?)null, (ushort?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableInt() => DeserializeSlow((uint?)null, (int?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableUInt() => DeserializeSlow((uint?)null, (uint?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableLong() => DeserializeSlow((uint?)null, (long?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableULong() => DeserializeFast((uint?)null, (ulong?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableFloat() => DeserializeSlow((uint?)null, (float?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableDouble() => DeserializeSlow((uint?)null, (double?)null, ForbidSchemaTypeOptimization);
    [Fact] public void NullableUIntToNullableDecimal() => DeserializeSlow((uint?)null, (decimal?)null, ForbidSchemaTypeOptimization);
}
